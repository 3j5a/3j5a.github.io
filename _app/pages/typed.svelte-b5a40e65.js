import{S as Qr,i as Xr,s as Yr,x as g,y as h,z as v,r as b,p as _,C as y,e as m,t as i,k as x,c as d,a as j,h as f,d as o,m as T,b as U,f as tn,g as p,F as s,n as rt}from"../chunks/index-4309a87d.js";import{C as rn}from"../chunks/Caret-57cc30ac.js";import{E as V}from"../chunks/ExternalReference-7c074159.js";import{C as nn,c as an,a as nt,J as Pt,b as Rt}from"../chunks/JuliaCodeBlock-85438e7f.js";import{C as $e,S as Gr}from"../chunks/CodeFrame-87bfb49d.js";import{S as $t}from"../chunks/SideNote-4d873226.js";import{J as en}from"../chunks/JuliaReplCodeBlock-e7f720a7.js";function on(c){let e,n;return e=new nn({props:{language:an,code:Kr+c[0]}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,[r]){const a={};r&1&&(a.code=Kr+t[0]),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}const Kr="> ";function sn(c,e,n){let{code:t}=e;return c.$$set=r=>{"code"in r&&n(0,t=r.code)},[t]}class Dt extends Qr{constructor(e){super(),Xr(this,e,sn,on,Yr,{code:0})}}function ln(c){let e,n,t,r,a;return r=new V({props:{href:"https://www.youtube.com/watch?v=IOiZatlZtGU",text:"Propositions as Types"}}),{c(){e=i("I can't but make a note of an excellent "),n=m("br"),t=i(` talk by Philip Wadler -
                `),g(r.$$.fragment)},l(u){e=f(u,"I can't but make a note of an excellent "),n=d(u,"BR",{}),t=f(u,` talk by Philip Wadler -
                `),h(r.$$.fragment,u)},m(u,J){p(u,e,J),p(u,n,J),p(u,t,J),v(r,u,J),a=!0},p:rt,i(u){a||(b(r.$$.fragment,u),a=!0)},o(u){_(r.$$.fragment,u),a=!1},d(u){u&&o(e),u&&o(n),u&&o(t),y(r,u)}}}function fn(c){let e,n,t,r,a,u,J,N,E,C,k,z,I,X,Y,oe,ee,ae,L,te,Z,fe;return{c(){e=m("b"),n=i("JS"),t=i(" is actually "),r=m("b"),a=i("loosely"),u=i(", "),J=m("b"),N=i("implicitly"),E=x(),C=m("br"),k=i(" and "),z=m("b"),I=i("dynamically"),X=i(" typed."),Y=m("br"),oe=i(`
                It has both `),ee=m("b"),ae=i("primitive values"),L=i(" and "),te=m("b"),Z=i("objects"),fe=i(".")},l(w){e=d(w,"B",{});var P=j(e);n=f(P,"JS"),P.forEach(o),t=f(w," is actually "),r=d(w,"B",{});var ue=j(r);a=f(ue,"loosely"),ue.forEach(o),u=f(w,", "),J=d(w,"B",{});var G=j(J);N=f(G,"implicitly"),G.forEach(o),E=T(w),C=d(w,"BR",{}),k=f(w," and "),z=d(w,"B",{});var re=j(z);I=f(re,"dynamically"),re.forEach(o),X=f(w," typed."),Y=d(w,"BR",{}),oe=f(w,`
                It has both `),ee=d(w,"B",{});var ce=j(ee);ae=f(ce,"primitive values"),ce.forEach(o),L=f(w," and "),te=d(w,"B",{});var M=j(te);Z=f(M,"objects"),M.forEach(o),fe=f(w,".")},m(w,P){p(w,e,P),s(e,n),p(w,t,P),p(w,r,P),s(r,a),p(w,u,P),p(w,J,P),s(J,N),p(w,E,P),p(w,C,P),p(w,k,P),p(w,z,P),s(z,I),p(w,X,P),p(w,Y,P),p(w,oe,P),p(w,ee,P),s(ee,ae),p(w,L,P),p(w,te,P),s(te,Z),p(w,fe,P)},p:rt,d(w){w&&o(e),w&&o(t),w&&o(r),w&&o(u),w&&o(J),w&&o(E),w&&o(C),w&&o(k),w&&o(z),w&&o(X),w&&o(Y),w&&o(oe),w&&o(ee),w&&o(L),w&&o(te),w&&o(fe)}}}function $n(c){let e,n;return e=new Dt({props:{code:c[0].javascript[10].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[10].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function un(c){let e,n,t;return n=new nt({props:{code:c[0].javascript[11].code}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].javascript[11].code),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function cn(c){let e,n;return e=new Dt({props:{code:c[0].javascript[8].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[8].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function pn(c){let e,n,t;return n=new nt({props:{code:c[0].javascript[9].code}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].javascript[9].code),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function mn(c){let e,n;return e=new Dt({props:{code:c[0].javascript[2].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[2].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function dn(c){let e,n,t;return n=new nt({props:{code:c[0].javascript[3].code}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].javascript[3].code),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function gn(c){let e,n;return e=new Dt({props:{code:c[0].javascript[5].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[5].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function hn(c){let e,n,t;return n=new nt({props:{code:c[0].javascript[6].code}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].javascript[6].code),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function vn(c){let e,n;return e=new nt({props:{code:c[0].javascript[4].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[4].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function bn(c){let e,n,t;return n=new nt({props:{code:"\u{1F914}"}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p:rt,i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function _n(c){let e,n;return e=new nt({props:{code:c[0].javascript[7].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[7].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function yn(c){let e,n,t,r,a,u,J,N,E,C;return n=new V({props:{href:"https://learning.oreilly.com/library/view/java-generics-and/0596527756/",text:"Java Generics"}}),u=new V({props:{href:"https://homepages.inf.ed.ac.uk/wadler/gj/",text:"GJ"}}),{c(){e=i(`Generics even got an excellent book devoted to them back then  -
                `),g(n.$$.fragment),t=x(),r=m("br"),a=i(` with
                Phillip Wadler as a co-author, also a co-creator of `),g(u.$$.fragment),J=i(`
                that became `),N=m("br"),E=i(" the basis for generics as we know it.")},l(k){e=f(k,`Generics even got an excellent book devoted to them back then  -
                `),h(n.$$.fragment,k),t=T(k),r=d(k,"BR",{}),a=f(k,` with
                Phillip Wadler as a co-author, also a co-creator of `),h(u.$$.fragment,k),J=f(k,`
                that became `),N=d(k,"BR",{}),E=f(k," the basis for generics as we know it.")},m(k,z){p(k,e,z),v(n,k,z),p(k,t,z),p(k,r,z),p(k,a,z),v(u,k,z),p(k,J,z),p(k,N,z),p(k,E,z),C=!0},p:rt,i(k){C||(b(n.$$.fragment,k),b(u.$$.fragment,k),C=!0)},o(k){_(n.$$.fragment,k),_(u.$$.fragment,k),C=!1},d(k){k&&o(e),y(n,k),k&&o(t),k&&o(r),k&&o(a),y(u,k),k&&o(J),k&&o(N),k&&o(E)}}}function wn(c){let e,n,t,r,a,u,J,N;return r=new V({props:{href:"https://openjdk.org/jeps/286",text:"JEP 286"}}),{c(){e=i('High-five if you ever tried to use "var" in Java when '),n=m("br"),t=i(` switching
                    to it from some JavaScript code, before `),g(r.$$.fragment),a=x(),u=m("br"),J=i(" BTW you probably shouldn't use it anymore in JS.")},l(E){e=f(E,'High-five if you ever tried to use "var" in Java when '),n=d(E,"BR",{}),t=f(E,` switching
                    to it from some JavaScript code, before `),h(r.$$.fragment,E),a=T(E),u=d(E,"BR",{}),J=f(E," BTW you probably shouldn't use it anymore in JS.")},m(E,C){p(E,e,C),p(E,n,C),p(E,t,C),v(r,E,C),p(E,a,C),p(E,u,C),p(E,J,C),N=!0},p:rt,i(E){N||(b(r.$$.fragment,E),N=!0)},o(E){_(r.$$.fragment,E),N=!1},d(E){E&&o(e),E&&o(n),E&&o(t),y(r,E),E&&o(a),E&&o(u),E&&o(J)}}}function jn(c){let e,n;return e=new Gr({props:{code:"java "+c[0].java[5].fileName}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code="java "+t[0].java[5].fileName),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function kn(c){let e,n,t,r,a;return n=new Pt({props:{code:c[0].java[5].code,header:c[0].java[5].fileName,icon:"fa-regular fa-file-lines"}}),r=new Pt({props:{code:c[0].java[6].code,header:"\xA0"}}),{c(){e=m("div"),g(n.$$.fragment),t=x(),g(r.$$.fragment),this.h()},l(u){e=d(u,"DIV",{slot:!0});var J=j(e);h(n.$$.fragment,J),t=T(J),h(r.$$.fragment,J),J.forEach(o),this.h()},h(){U(e,"slot","output")},m(u,J){p(u,e,J),v(n,e,null),s(e,t),v(r,e,null),a=!0},p(u,J){const N={};J&1&&(N.code=u[0].java[5].code),J&1&&(N.header=u[0].java[5].fileName),n.$set(N);const E={};J&1&&(E.code=u[0].java[6].code),r.$set(E)},i(u){a||(b(n.$$.fragment,u),b(r.$$.fragment,u),a=!0)},o(u){_(n.$$.fragment,u),_(r.$$.fragment,u),a=!1},d(u){u&&o(e),y(n),y(r)}}}function En(c){let e,n;return e=new Gr({props:{code:"java "+c[0].java[4].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code="java "+t[0].java[4].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Jn(c){let e,n,t;return n=new Pt({props:{code:c[0].java[3].code}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].java[3].code),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function Bn(c){let e,n;return e=new Gr({props:{code:c[0].java[2].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].java[2].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Sn(c){let e,n,t;return n=new Pt({props:{code:c[0].java[0].code,header:c[0].java[0].fileName,icon:"fa-regular fa-file-lines"}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].java[0].code),a&1&&(u.header=r[0].java[0].fileName),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function In(c){let e,n,t,r,a,u,J,N,E,C,k,z,I,X,Y,oe,ee,ae,L,te,Z,fe,w,P,ue,G,re,ce,M,We,se,be,le,_e,de,pe,ye,Q,we,W;return pe=new V({props:{href:"https://openjdk.org/jeps/401",text:"Primitive Classes"}}),Q=new V({props:{href:"https://openjdk.org/jeps/402",text:"Classes for the Basic Primitives"}}),{c(){e=m("b"),n=i("Java"),t=i(" is actually "),r=m("b"),a=i("strongly"),u=i(", "),J=m("b"),N=i("explicitly"),E=i(" (but "),C=m("b"),k=i("type-inferred"),z=i(" where possible) and "),I=m("b"),X=i("statically"),Y=i(` typed.
                    `),oe=m("br"),ee=x(),ae=m("b"),L=i("Nominal"),te=i(" by nature, it doesn't support "),Z=m("b"),fe=i("structural"),w=i(` types, but allows non-denotable types.
                    `),P=m("br"),ue=i(`
                    It supports `),G=m("b"),re=i("parametrized types"),ce=i(" ("),M=m("b"),We=i("generics"),se=i('), but the info is "erased" at runtime.'),be=m("br"),le=i(`
                    It has both primitive values and objects. `),_e=m("br"),de=x(),g(pe.$$.fragment),ye=i(`
                    and `),g(Q.$$.fragment),we=i(` are
                    on the horizon at the time of writing.`)},l(l){e=d(l,"B",{});var B=j(e);n=f(B,"Java"),B.forEach(o),t=f(l," is actually "),r=d(l,"B",{});var at=j(r);a=f(at,"strongly"),at.forEach(o),u=f(l,", "),J=d(l,"B",{});var ge=j(J);N=f(ge,"explicitly"),ge.forEach(o),E=f(l," (but "),C=d(l,"B",{});var ot=j(C);k=f(ot,"type-inferred"),ot.forEach(o),z=f(l," where possible) and "),I=d(l,"B",{});var he=j(I);X=f(he,"statically"),he.forEach(o),Y=f(l,` typed.
                    `),oe=d(l,"BR",{}),ee=T(l),ae=d(l,"B",{});var st=j(ae);L=f(st,"Nominal"),st.forEach(o),te=f(l," by nature, it doesn't support "),Z=d(l,"B",{});var ve=j(Z);fe=f(ve,"structural"),ve.forEach(o),w=f(l,` types, but allows non-denotable types.
                    `),P=d(l,"BR",{}),ue=f(l,`
                    It supports `),G=d(l,"B",{});var lt=j(G);re=f(lt,"parametrized types"),lt.forEach(o),ce=f(l," ("),M=d(l,"B",{});var it=j(M);We=f(it,"generics"),it.forEach(o),se=f(l,'), but the info is "erased" at runtime.'),be=d(l,"BR",{}),le=f(l,`
                    It has both primitive values and objects. `),_e=d(l,"BR",{}),de=T(l),h(pe.$$.fragment,l),ye=f(l,`
                    and `),h(Q.$$.fragment,l),we=f(l,` are
                    on the horizon at the time of writing.`)},m(l,B){p(l,e,B),s(e,n),p(l,t,B),p(l,r,B),s(r,a),p(l,u,B),p(l,J,B),s(J,N),p(l,E,B),p(l,C,B),s(C,k),p(l,z,B),p(l,I,B),s(I,X),p(l,Y,B),p(l,oe,B),p(l,ee,B),p(l,ae,B),s(ae,L),p(l,te,B),p(l,Z,B),s(Z,fe),p(l,w,B),p(l,P,B),p(l,ue,B),p(l,G,B),s(G,re),p(l,ce,B),p(l,M,B),s(M,We),p(l,se,B),p(l,be,B),p(l,le,B),p(l,_e,B),p(l,de,B),v(pe,l,B),p(l,ye,B),v(Q,l,B),p(l,we,B),W=!0},p:rt,i(l){W||(b(pe.$$.fragment,l),b(Q.$$.fragment,l),W=!0)},o(l){_(pe.$$.fragment,l),_(Q.$$.fragment,l),W=!1},d(l){l&&o(e),l&&o(t),l&&o(r),l&&o(u),l&&o(J),l&&o(E),l&&o(C),l&&o(z),l&&o(I),l&&o(Y),l&&o(oe),l&&o(ee),l&&o(ae),l&&o(te),l&&o(Z),l&&o(w),l&&o(P),l&&o(ue),l&&o(G),l&&o(ce),l&&o(M),l&&o(se),l&&o(be),l&&o(le),l&&o(_e),l&&o(de),y(pe,l),l&&o(ye),y(Q,l),l&&o(we)}}}function xn(c){let e,n;return e=new Rt({props:{code:c[0].julia[0].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].julia[0].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Tn(c){let e,n,t;return n=new en({props:{code:c[0].julia[1].code}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].julia[1].code),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function Cn(c){let e,n;return e=new Rt({props:{code:c[0].julia[2].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].julia[2].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Pn(c){let e,n,t;return n=new en({props:{code:c[0].julia[3].code}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].julia[3].code),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function Rn(c){let e,n;return e=new Rt({props:{code:c[0].julia[4].code}}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,r){v(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].julia[4].code),e.$set(a)},i(t){n||(b(e.$$.fragment,t),n=!0)},o(t){_(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Dn(c){let e,n,t;return n=new Rt({props:{code:c[0].julia[5].code}}),{c(){e=m("div"),g(n.$$.fragment),this.h()},l(r){e=d(r,"DIV",{slot:!0});var a=j(e);h(n.$$.fragment,a),a.forEach(o),this.h()},h(){U(e,"slot","output")},m(r,a){p(r,e,a),v(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].julia[5].code),n.$set(u)},i(r){t||(b(n.$$.fragment,r),t=!0)},o(r){_(n.$$.fragment,r),t=!1},d(r){r&&o(e),y(n)}}}function Nn(c){let e,n,t,r;return n=new V({props:{href:"https://docs.julialang.org/en/v1/manual/types/",text:"types manual"}}),{c(){e=i("Julia's "),g(n.$$.fragment),t=i(`
                is an excellent place to get to know its types.`)},l(a){e=f(a,"Julia's "),h(n.$$.fragment,a),t=f(a,`
                is an excellent place to get to know its types.`)},m(a,u){p(a,e,u),v(n,a,u),p(a,t,u),r=!0},p:rt,i(a){r||(b(n.$$.fragment,a),r=!0)},o(a){_(n.$$.fragment,a),r=!1},d(a){a&&o(e),y(n,a),a&&o(t)}}}function Wn(c){let e,n,t,r,a,u,J,N,E,C,k,z,I,X,Y,oe,ee,ae,L,te,Z,fe,w,P,ue,G,re,ce,M,We,se,be,le,_e,de,pe,ye,Q,we,W,l,B,at,ge,ot,he,st,ve,lt,it,Nt,ze,Wt,Ae,zt,ut,At,Vt,Gt,je,Ot,ke,qt,Ve,Ht,Ut,F,ct,Ft,Zt,Ge,Mt,Oe,Lt,qe,Kt,He,Qt,Ee,Xt,R,Yt,pt,er,tr,mt,rr,nr,dt,ar,or,Je,sr,gt,lr,ir,ht,fr,$r,Be,ur,A,cr,Ue,pr,mr,dr,vt,gr,hr,bt,vr,br,_t,_r,yr,wr,jr,Fe,kr,Ze,Er,Me,Jr,Le,Br,Sr,Se,Ir,Ie,xr,Ke,Tr,Qe,Cr,Pr,xe,Rr,ie,yt,Dr,Nr,Te,Ce,Wr,Pe,zr,Re,Ar,De,Vr,Xe,xt;return k=new $t({props:{style:"margin: -1.25em 0 0 auto;",$$slots:{default:[ln]},$$scope:{ctx:c}}}),L=new $t({props:{style:"float: right; margin-top: -1.25em;",$$slots:{default:[fn]},$$scope:{ctx:c}}}),w=new V({props:{href:"https://youtu.be/et8xNAc2ic8",text:"WTFJS"}}),re=new $e({props:{$$slots:{output:[un],default:[$n]},$$scope:{ctx:c}}}),M=new $e({props:{$$slots:{output:[pn],default:[cn]},$$scope:{ctx:c}}}),se=new $e({props:{$$slots:{output:[dn],default:[mn]},$$scope:{ctx:c}}}),le=new $e({props:{$$slots:{output:[hn],default:[gn]},$$scope:{ctx:c}}}),Q=new $e({props:{style:"margin: 0.25em auto 0;",$$slots:{output:[bn],default:[vn]},$$scope:{ctx:c}}}),B=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#bigint_type",text:"BigInt"}}),ge=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#symbol_type",text:"Symbol"}}),he=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays",text:"Typed arrays"}}),ve=new V({props:{href:"https://en.wikipedia.org/wiki/The_Twilight_Zone",text:"The Twilight Zone"}}),ze=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",text:"Promise"}}),Ae=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",text:"Generator"}}),je=new $e({props:{style:"margin: -1em 0 0 auto;",$$slots:{default:[_n]},$$scope:{ctx:c}}}),Ve=new V({props:{href:"https://en.wikipedia.org/wiki/Duck_typing",text:"If it walks like a duck and it quacks like a duck, then it must be a duck"}}),Ge=new V({props:{href:"https://en.wikipedia.org/wiki/Generics_in_Java",text:"Generics"}}),Oe=new V({props:{href:"https://en.wikipedia.org/wiki/Generics_in_Java#Problems_with_type_erasure",text:"Type erasure"}}),qe=new V({props:{href:"https://dl.acm.org/doi/10.1145/2983990.2984004",text:"Java is Unsound"}}),He=new V({props:{href:"https://openjdk.org/jeps/8261529",text:"Universal Generics"}}),Ee=new $t({props:{style:"margin: -1.5em 0 0 auto",$$slots:{default:[yn]},$$scope:{ctx:c}}}),Je=new $t({props:{style:"float:right",$$slots:{default:[wn]},$$scope:{ctx:c}}}),Be=new $e({props:{style:"margin: 0 auto;",$$slots:{output:[kn],default:[jn]},$$scope:{ctx:c}}}),Ue=new V({props:{href:"https://openjdk.org/jeps/126",text:"Lambdas"}}),Fe=new V({props:{href:"https://openjdk.org/jeps/394",text:"Pattern Matching for instanceof"}}),Ze=new V({props:{href:"https://openjdk.org/jeps/395",text:"Records"}}),Me=new V({props:{href:"https://openjdk.org/jeps/409",text:"Sealed Classes"}}),Le=new V({props:{href:"https://openjdk.org/jeps/427",text:"Pattern Matching for switch"}}),Se=new $e({props:{style:"margin: 0.25em auto 0;",$$slots:{output:[Jn],default:[En]},$$scope:{ctx:c}}}),Ie=new $e({props:{style:"margin: 0.25em auto 0;",$$slots:{output:[Sn],default:[Bn]},$$scope:{ctx:c}}}),Qe=new V({props:{href:"https://www.infoq.com/articles/data-oriented-programming-java/",text:"DOP"}}),xe=new $t({props:{style:"margin: -1.25em 0 0 auto;",$$slots:{default:[In]},$$scope:{ctx:c}}}),Ce=new $e({props:{$$slots:{output:[Tn],default:[xn]},$$scope:{ctx:c}}}),Pe=new $e({props:{$$slots:{output:[Pn],default:[Cn]},$$scope:{ctx:c}}}),Re=new $e({props:{style:"margin: 0 auto",$$slots:{output:[Dn],default:[Rn]},$$scope:{ctx:c}}}),De=new $t({props:{style:"float: right",$$slots:{default:[Nn]},$$scope:{ctx:c}}}),Xe=new rn({}),{c(){e=m("main"),n=m("article"),t=m("header"),r=m("h4"),a=i("typed"),u=x(),J=m("section"),N=m("p"),E=i(`Types are important. They keep you away from inconsistent mess,
                guard from certain errors, allow to model and document things,
                and write performant code. The better type system of your language is, the better
                your code should be.`),C=x(),g(k.$$.fragment),z=x(),I=m("section"),X=m("p"),Y=m("b"),oe=i("JavaScript"),ee=i(` type system... JS type system... well it's formally there \u{1F610}.
                But informally it feels like you're at a playground and nobody's watching, so you
                can easily find yourself swinging on a merry-go-round and spinning on a swing
                (I honestly don't mind that kind of fun \u{1F913}).`),ae=x(),g(L.$$.fragment),te=x(),Z=m("p"),fe=i(`There are lots of crazy cool examples related to JS built in data-types and
                its type coercion. If somehow you've missed a hilarious
                `),g(w.$$.fragment),P=i(` - enjoy.
                Here are some of my favourites:`),ue=x(),G=m("div"),g(re.$$.fragment),ce=x(),g(M.$$.fragment),We=x(),g(se.$$.fragment),be=x(),g(le.$$.fragment),_e=x(),de=m("p"),pe=i("And can a poor monkey dodge a snake and have enough mangoes and maybe a pie in a cruel JS world?"),ye=x(),g(Q.$$.fragment),we=x(),W=m("p"),l=i(`There have been quite a few data-types added to the language over time, like
                `),g(B.$$.fragment),at=i(` and
                `),g(ge.$$.fragment),ot=i(` for example. To me, addition of
                `),g(he.$$.fragment),st=i(` was like entering
                `),g(ve.$$.fragment),lt=i(` -
                science fiction, suspense, horror and super cool at once \u{1F610}.
                `),it=m("br"),Nt=x(),g(ze.$$.fragment),Wt=i(` and
                `),g(Ae.$$.fragment),zt=i(` (JS functions are good parts for sure) additions were warmly welcomed
                as well. How about `),ut=m("b"),At=i("mango-infinity"),Vt=i(" for that monkey?"),Gt=x(),g(je.$$.fragment),Ot=x(),ke=m("p"),qt=i("And I can't but agree that "),g(Ve.$$.fragment),Ht=i(`
                is a cool no fuss usage oriented way to code.`),Ut=x(),F=m("section"),ct=m("b"),Ft=i("Java"),Zt=i(` has come a long way enhancing its type system over time.
            `),g(Ge.$$.fragment),Mt=i(` were the first
            notable addition. Backward compatibility requirement, being at the heart of language evolution,
            obviously impacted generics design choices.
            `),g(Oe.$$.fragment),Lt=i(`
            just had to happen, but it was actually a good old null pointer that some 12 years later allowed
            for a (fearful) discovery:
            `),g(qe.$$.fragment),Kt=i(` (\u{1F628}...and Scala as well \u{1F631}).
            Should you care though? Well, if you're designing a new programming language then wtf are you doing here \u{1F615}?
            Java isn't done with generics though: `),g(He.$$.fragment),Qt=i(`
            are already on the horizon at the time of writing.
            `),g(Ee.$$.fragment),Xt=x(),R=m("div"),Yt=i("There's been quite a few additions since generics. I've patiently waited for "),pt=m("b"),er=i("var"),tr=i(` support,
                wondering why `),mt=m("b"),rr=i("Script"),nr=i(" had it, but "),dt=m("b"),ar=i("Java"),or=i(` did not \u{1F914}.
                `),g(Je.$$.fragment),sr=i(`
                It turned out to be much more than just a syntactic convenience, adding
                (even if limited) support for `),gt=m("b"),lr=i("non-denotable"),ir=i(" types. "),ht=m("b"),fr=i("var"),$r=i(` allows to preserve
                type information, so the following is possible:
                `),g(Be.$$.fragment),ur=x(),A=m("p"),cr=i("Obviously "),g(Ue.$$.fragment),pr=i(" happened earlier (Java 8 vs. Java 10) and were a much-much-...-much"),mr=m("br"),dr=i(`
                    bigger than `),vt=m("b"),gr=i("var"),hr=i(` (why did I mention it first then? \u{1F914}). And they brought in a notion of a target type
                    slash `),bt=m("b"),vr=i("functional interface"),br=i(", and also "),_t=m("b"),_r=i("default methods"),yr=i(` in interfaces. And then there were.. and also... Well, somebody has to put
                    together a good article about Java type-system history and evolution for sure (\u{1F4DD}).`),wr=m("br"),jr=i(`
                    Fast forward and there you have your
                    `),g(Fe.$$.fragment),kr=i(`,
                    `),g(Ze.$$.fragment),Er=i(`,
                    `),g(Me.$$.fragment),Jr=i(`
                    and already a third preview of `),g(Le.$$.fragment),Br=i("."),Sr=x(),g(Se.$$.fragment),Ir=x(),g(Ie.$$.fragment),xr=x(),Ke=m("p"),Tr=i(`And with current and ongoing type system changes Java is up for yet another programming paradigm -
                    `),g(Qe.$$.fragment),Cr=i(`.
                (Doh!)`),Pr=x(),g(xe.$$.fragment),Rr=x(),ie=m("section"),yt=m("b"),Dr=i("Julia"),Nr=i(` type system is humble and powerful: you may not even notice it's there,
            but when explicitly needed, its expressiveness is ready to assist both you and the compiler.
            So you can for example do:
            `),Te=m("div"),g(Ce.$$.fragment),Wr=x(),g(Pe.$$.fragment),zr=i(`
            There are many things that I find interesting, like the ability to define custom primitive
            types (doesn't mean you should) and the fact that Julia's standard primitive types are defined in the language itself.
            `),g(Re.$$.fragment),Ar=i(`
            It's also worth noting that in Julia only values have types, so type of a variable is actually a type
            of the value to which a variable refers.
            `),g(De.$$.fragment),Vr=x(),g(Xe.$$.fragment),this.h()},l($){e=d($,"MAIN",{});var S=j(e);n=d(S,"ARTICLE",{class:!0});var ne=j(n);t=d(ne,"HEADER",{});var wt=j(t);r=d(wt,"H4",{});var jt=j(r);a=f(jt,"typed"),jt.forEach(o),wt.forEach(o),u=T(ne),J=d(ne,"SECTION",{id:!0});var Ye=j(J);N=d(Ye,"P",{});var kt=j(N);E=f(kt,`Types are important. They keep you away from inconsistent mess,
                guard from certain errors, allow to model and document things,
                and write performant code. The better type system of your language is, the better
                your code should be.`),kt.forEach(o),C=T(Ye),h(k.$$.fragment,Ye),Ye.forEach(o),z=T(ne),I=d(ne,"SECTION",{id:!0});var q=j(I);X=d(q,"P",{});var ft=j(X);Y=d(ft,"B",{});var Et=j(Y);oe=f(Et,"JavaScript"),Et.forEach(o),ee=f(ft,` type system... JS type system... well it's formally there \u{1F610}.
                But informally it feels like you're at a playground and nobody's watching, so you
                can easily find yourself swinging on a merry-go-round and spinning on a swing
                (I honestly don't mind that kind of fun \u{1F913}).`),ft.forEach(o),ae=T(q),h(L.$$.fragment,q),te=T(q),Z=d(q,"P",{});var et=j(Z);fe=f(et,`There are lots of crazy cool examples related to JS built in data-types and
                its type coercion. If somehow you've missed a hilarious
                `),h(w.$$.fragment,et),P=f(et,` - enjoy.
                Here are some of my favourites:`),et.forEach(o),ue=T(q),G=d(q,"DIV",{class:!0});var me=j(G);h(re.$$.fragment,me),ce=T(me),h(M.$$.fragment,me),We=T(me),h(se.$$.fragment,me),be=T(me),h(le.$$.fragment,me),me.forEach(o),_e=T(q),de=d(q,"P",{});var Jt=j(de);pe=f(Jt,"And can a poor monkey dodge a snake and have enough mangoes and maybe a pie in a cruel JS world?"),Jt.forEach(o),ye=T(q),h(Q.$$.fragment,q),we=T(q),W=d(q,"P",{});var H=j(W);l=f(H,`There have been quite a few data-types added to the language over time, like
                `),h(B.$$.fragment,H),at=f(H,` and
                `),h(ge.$$.fragment,H),ot=f(H,` for example. To me, addition of
                `),h(he.$$.fragment,H),st=f(H,` was like entering
                `),h(ve.$$.fragment,H),lt=f(H,` -
                science fiction, suspense, horror and super cool at once \u{1F610}.
                `),it=d(H,"BR",{}),Nt=T(H),h(ze.$$.fragment,H),Wt=f(H,` and
                `),h(Ae.$$.fragment,H),zt=f(H,` (JS functions are good parts for sure) additions were warmly welcomed
                as well. How about `),ut=d(H,"B",{});var Bt=j(ut);At=f(Bt,"mango-infinity"),Bt.forEach(o),Vt=f(H," for that monkey?"),H.forEach(o),Gt=T(q),h(je.$$.fragment,q),Ot=T(q),ke=d(q,"P",{style:!0});var tt=j(ke);qt=f(tt,"And I can't but agree that "),h(Ve.$$.fragment,tt),Ht=f(tt,`
                is a cool no fuss usage oriented way to code.`),tt.forEach(o),q.forEach(o),Ut=T(ne),F=d(ne,"SECTION",{id:!0,class:!0});var K=j(F);ct=d(K,"B",{});var St=j(ct);Ft=f(St,"Java"),St.forEach(o),Zt=f(K,` has come a long way enhancing its type system over time.
            `),h(Ge.$$.fragment,K),Mt=f(K,` were the first
            notable addition. Backward compatibility requirement, being at the heart of language evolution,
            obviously impacted generics design choices.
            `),h(Oe.$$.fragment,K),Lt=f(K,`
            just had to happen, but it was actually a good old null pointer that some 12 years later allowed
            for a (fearful) discovery:
            `),h(qe.$$.fragment,K),Kt=f(K,` (\u{1F628}...and Scala as well \u{1F631}).
            Should you care though? Well, if you're designing a new programming language then wtf are you doing here \u{1F615}?
            Java isn't done with generics though: `),h(He.$$.fragment,K),Qt=f(K,`
            are already on the horizon at the time of writing.
            `),h(Ee.$$.fragment,K),Xt=T(K),R=d(K,"DIV",{});var D=j(R);Yt=f(D,"There's been quite a few additions since generics. I've patiently waited for "),pt=d(D,"B",{});var It=j(pt);er=f(It,"var"),It.forEach(o),tr=f(D,` support,
                wondering why `),mt=d(D,"B",{});var Or=j(mt);rr=f(Or,"Script"),Or.forEach(o),nr=f(D," had it, but "),dt=d(D,"B",{});var qr=j(dt);ar=f(qr,"Java"),qr.forEach(o),or=f(D,` did not \u{1F914}.
                `),h(Je.$$.fragment,D),sr=f(D,`
                It turned out to be much more than just a syntactic convenience, adding
                (even if limited) support for `),gt=d(D,"B",{});var Hr=j(gt);lr=f(Hr,"non-denotable"),Hr.forEach(o),ir=f(D," types. "),ht=d(D,"B",{});var Ur=j(ht);fr=f(Ur,"var"),Ur.forEach(o),$r=f(D,` allows to preserve
                type information, so the following is possible:
                `),h(Be.$$.fragment,D),ur=T(D),A=d(D,"P",{});var O=j(A);cr=f(O,"Obviously "),h(Ue.$$.fragment,O),pr=f(O," happened earlier (Java 8 vs. Java 10) and were a much-much-...-much"),mr=d(O,"BR",{}),dr=f(O,`
                    bigger than `),vt=d(O,"B",{});var Fr=j(vt);gr=f(Fr,"var"),Fr.forEach(o),hr=f(O,` (why did I mention it first then? \u{1F914}). And they brought in a notion of a target type
                    slash `),bt=d(O,"B",{});var Zr=j(bt);vr=f(Zr,"functional interface"),Zr.forEach(o),br=f(O,", and also "),_t=d(O,"B",{});var Mr=j(_t);_r=f(Mr,"default methods"),Mr.forEach(o),yr=f(O,` in interfaces. And then there were.. and also... Well, somebody has to put
                    together a good article about Java type-system history and evolution for sure (\u{1F4DD}).`),wr=d(O,"BR",{}),jr=f(O,`
                    Fast forward and there you have your
                    `),h(Fe.$$.fragment,O),kr=f(O,`,
                    `),h(Ze.$$.fragment,O),Er=f(O,`,
                    `),h(Me.$$.fragment,O),Jr=f(O,`
                    and already a third preview of `),h(Le.$$.fragment,O),Br=f(O,"."),O.forEach(o),Sr=T(D),h(Se.$$.fragment,D),Ir=T(D),h(Ie.$$.fragment,D),xr=T(D),Ke=d(D,"P",{});var Tt=j(Ke);Tr=f(Tt,`And with current and ongoing type system changes Java is up for yet another programming paradigm -
                    `),h(Qe.$$.fragment,Tt),Cr=f(Tt,`.
                (Doh!)`),Tt.forEach(o),Pr=T(D),h(xe.$$.fragment,D),D.forEach(o),K.forEach(o),Rr=T(ne),ie=d(ne,"SECTION",{id:!0,class:!0});var Ne=j(ie);yt=d(Ne,"B",{});var Lr=j(yt);Dr=f(Lr,"Julia"),Lr.forEach(o),Nr=f(Ne,` type system is humble and powerful: you may not even notice it's there,
            but when explicitly needed, its expressiveness is ready to assist both you and the compiler.
            So you can for example do:
            `),Te=d(Ne,"DIV",{class:!0});var Ct=j(Te);h(Ce.$$.fragment,Ct),Wr=T(Ct),h(Pe.$$.fragment,Ct),Ct.forEach(o),zr=f(Ne,`
            There are many things that I find interesting, like the ability to define custom primitive
            types (doesn't mean you should) and the fact that Julia's standard primitive types are defined in the language itself.
            `),h(Re.$$.fragment,Ne),Ar=f(Ne,`
            It's also worth noting that in Julia only values have types, so type of a variable is actually a type
            of the value to which a variable refers.
            `),h(De.$$.fragment,Ne),Ne.forEach(o),Vr=T(ne),h(Xe.$$.fragment,ne),ne.forEach(o),S.forEach(o),this.h()},h(){U(J,"id","intro"),U(G,"class","wtfjs svelte-cf18uv"),tn(ke,"clear","both"),U(I,"id","JavaScript"),U(F,"id","java"),U(F,"class","svelte-cf18uv"),U(Te,"class","julia-entry-type svelte-cf18uv"),U(ie,"id","julia"),U(ie,"class","svelte-cf18uv"),U(n,"class","typed")},m($,S){p($,e,S),s(e,n),s(n,t),s(t,r),s(r,a),s(n,u),s(n,J),s(J,N),s(N,E),s(J,C),v(k,J,null),s(n,z),s(n,I),s(I,X),s(X,Y),s(Y,oe),s(X,ee),s(I,ae),v(L,I,null),s(I,te),s(I,Z),s(Z,fe),v(w,Z,null),s(Z,P),s(I,ue),s(I,G),v(re,G,null),s(G,ce),v(M,G,null),s(G,We),v(se,G,null),s(G,be),v(le,G,null),s(I,_e),s(I,de),s(de,pe),s(I,ye),v(Q,I,null),s(I,we),s(I,W),s(W,l),v(B,W,null),s(W,at),v(ge,W,null),s(W,ot),v(he,W,null),s(W,st),v(ve,W,null),s(W,lt),s(W,it),s(W,Nt),v(ze,W,null),s(W,Wt),v(Ae,W,null),s(W,zt),s(W,ut),s(ut,At),s(W,Vt),s(I,Gt),v(je,I,null),s(I,Ot),s(I,ke),s(ke,qt),v(Ve,ke,null),s(ke,Ht),s(n,Ut),s(n,F),s(F,ct),s(ct,Ft),s(F,Zt),v(Ge,F,null),s(F,Mt),v(Oe,F,null),s(F,Lt),v(qe,F,null),s(F,Kt),v(He,F,null),s(F,Qt),v(Ee,F,null),s(F,Xt),s(F,R),s(R,Yt),s(R,pt),s(pt,er),s(R,tr),s(R,mt),s(mt,rr),s(R,nr),s(R,dt),s(dt,ar),s(R,or),v(Je,R,null),s(R,sr),s(R,gt),s(gt,lr),s(R,ir),s(R,ht),s(ht,fr),s(R,$r),v(Be,R,null),s(R,ur),s(R,A),s(A,cr),v(Ue,A,null),s(A,pr),s(A,mr),s(A,dr),s(A,vt),s(vt,gr),s(A,hr),s(A,bt),s(bt,vr),s(A,br),s(A,_t),s(_t,_r),s(A,yr),s(A,wr),s(A,jr),v(Fe,A,null),s(A,kr),v(Ze,A,null),s(A,Er),v(Me,A,null),s(A,Jr),v(Le,A,null),s(A,Br),s(R,Sr),v(Se,R,null),s(R,Ir),v(Ie,R,null),s(R,xr),s(R,Ke),s(Ke,Tr),v(Qe,Ke,null),s(Ke,Cr),s(R,Pr),v(xe,R,null),s(n,Rr),s(n,ie),s(ie,yt),s(yt,Dr),s(ie,Nr),s(ie,Te),v(Ce,Te,null),s(Te,Wr),v(Pe,Te,null),s(ie,zr),v(Re,ie,null),s(ie,Ar),v(De,ie,null),s(n,Vr),v(Xe,n,null),xt=!0},p($,[S]){const ne={};S&2&&(ne.$$scope={dirty:S,ctx:$}),k.$set(ne);const wt={};S&2&&(wt.$$scope={dirty:S,ctx:$}),L.$set(wt);const jt={};S&3&&(jt.$$scope={dirty:S,ctx:$}),re.$set(jt);const Ye={};S&3&&(Ye.$$scope={dirty:S,ctx:$}),M.$set(Ye);const kt={};S&3&&(kt.$$scope={dirty:S,ctx:$}),se.$set(kt);const q={};S&3&&(q.$$scope={dirty:S,ctx:$}),le.$set(q);const ft={};S&3&&(ft.$$scope={dirty:S,ctx:$}),Q.$set(ft);const Et={};S&3&&(Et.$$scope={dirty:S,ctx:$}),je.$set(Et);const et={};S&2&&(et.$$scope={dirty:S,ctx:$}),Ee.$set(et);const me={};S&2&&(me.$$scope={dirty:S,ctx:$}),Je.$set(me);const Jt={};S&3&&(Jt.$$scope={dirty:S,ctx:$}),Be.$set(Jt);const H={};S&3&&(H.$$scope={dirty:S,ctx:$}),Se.$set(H);const Bt={};S&3&&(Bt.$$scope={dirty:S,ctx:$}),Ie.$set(Bt);const tt={};S&2&&(tt.$$scope={dirty:S,ctx:$}),xe.$set(tt);const K={};S&3&&(K.$$scope={dirty:S,ctx:$}),Ce.$set(K);const St={};S&3&&(St.$$scope={dirty:S,ctx:$}),Pe.$set(St);const D={};S&3&&(D.$$scope={dirty:S,ctx:$}),Re.$set(D);const It={};S&2&&(It.$$scope={dirty:S,ctx:$}),De.$set(It)},i($){xt||(b(k.$$.fragment,$),b(L.$$.fragment,$),b(w.$$.fragment,$),b(re.$$.fragment,$),b(M.$$.fragment,$),b(se.$$.fragment,$),b(le.$$.fragment,$),b(Q.$$.fragment,$),b(B.$$.fragment,$),b(ge.$$.fragment,$),b(he.$$.fragment,$),b(ve.$$.fragment,$),b(ze.$$.fragment,$),b(Ae.$$.fragment,$),b(je.$$.fragment,$),b(Ve.$$.fragment,$),b(Ge.$$.fragment,$),b(Oe.$$.fragment,$),b(qe.$$.fragment,$),b(He.$$.fragment,$),b(Ee.$$.fragment,$),b(Je.$$.fragment,$),b(Be.$$.fragment,$),b(Ue.$$.fragment,$),b(Fe.$$.fragment,$),b(Ze.$$.fragment,$),b(Me.$$.fragment,$),b(Le.$$.fragment,$),b(Se.$$.fragment,$),b(Ie.$$.fragment,$),b(Qe.$$.fragment,$),b(xe.$$.fragment,$),b(Ce.$$.fragment,$),b(Pe.$$.fragment,$),b(Re.$$.fragment,$),b(De.$$.fragment,$),b(Xe.$$.fragment,$),xt=!0)},o($){_(k.$$.fragment,$),_(L.$$.fragment,$),_(w.$$.fragment,$),_(re.$$.fragment,$),_(M.$$.fragment,$),_(se.$$.fragment,$),_(le.$$.fragment,$),_(Q.$$.fragment,$),_(B.$$.fragment,$),_(ge.$$.fragment,$),_(he.$$.fragment,$),_(ve.$$.fragment,$),_(ze.$$.fragment,$),_(Ae.$$.fragment,$),_(je.$$.fragment,$),_(Ve.$$.fragment,$),_(Ge.$$.fragment,$),_(Oe.$$.fragment,$),_(qe.$$.fragment,$),_(He.$$.fragment,$),_(Ee.$$.fragment,$),_(Je.$$.fragment,$),_(Be.$$.fragment,$),_(Ue.$$.fragment,$),_(Fe.$$.fragment,$),_(Ze.$$.fragment,$),_(Me.$$.fragment,$),_(Le.$$.fragment,$),_(Se.$$.fragment,$),_(Ie.$$.fragment,$),_(Qe.$$.fragment,$),_(xe.$$.fragment,$),_(Ce.$$.fragment,$),_(Pe.$$.fragment,$),_(Re.$$.fragment,$),_(De.$$.fragment,$),_(Xe.$$.fragment,$),xt=!1},d($){$&&o(e),y(k),y(L),y(w),y(re),y(M),y(se),y(le),y(Q),y(B),y(ge),y(he),y(ve),y(ze),y(Ae),y(je),y(Ve),y(Ge),y(Oe),y(qe),y(He),y(Ee),y(Je),y(Be),y(Ue),y(Fe),y(Ze),y(Me),y(Le),y(Se),y(Ie),y(Qe),y(xe),y(Ce),y(Pe),y(Re),y(De),y(Xe)}}}function zn(c,e,n){let{codeBlocks:t}=e;return c.$$set=r=>{"codeBlocks"in r&&n(0,t=r.codeBlocks)},[t]}class Fn extends Qr{constructor(e){super(),Xr(this,e,zn,Wn,Yr,{codeBlocks:0})}}export{Fn as default};
