import{S as Yr,i as en,s as tn,x as p,y as d,z as g,r as h,p as v,C as b,e as _,t as f,k as x,c as y,a as j,h as $,d as s,m as T,b as U,f as nn,g as m,F as o,n as at}from"../chunks/index-4309a87d.js";import{C as an}from"../chunks/Caret-57cc30ac.js";import{E as V}from"../chunks/ExternalReference-7c074159.js";import{C as on,c as sn,a as ze,J as Dt,b as Nt}from"../chunks/JuliaCodeBlock-85438e7f.js";import{C as fe,S as Hr}from"../chunks/CodeFrame-87bfb49d.js";import{S as ut}from"../chunks/SideNote-4d873226.js";import{J as rn}from"../chunks/JuliaReplCodeBlock-e7f720a7.js";function ln(c){let e,n;return e=new on({props:{language:sn,code:Xr+c[0]}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,[r]){const a={};r&1&&(a.code=Xr+t[0]),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}const Xr="> ";function fn(c,e,n){let{code:t}=e;return c.$$set=r=>{"code"in r&&n(0,t=r.code)},[t]}class Wt extends Yr{constructor(e){super(),en(this,e,fn,ln,tn,{code:0})}}function $n(c){let e,n,t,r,a;return r=new V({props:{href:"https://www.youtube.com/watch?v=IOiZatlZtGU",text:"Propositions as Types"}}),{c(){e=f("I can't but make a note of an excellent "),n=_("br"),t=f(` talk by Philip Wadler -
                `),p(r.$$.fragment)},l(u){e=$(u,"I can't but make a note of an excellent "),n=y(u,"BR",{}),t=$(u,` talk by Philip Wadler -
                `),d(r.$$.fragment,u)},m(u,J){m(u,e,J),m(u,n,J),m(u,t,J),g(r,u,J),a=!0},p:at,i(u){a||(h(r.$$.fragment,u),a=!0)},o(u){v(r.$$.fragment,u),a=!1},d(u){u&&s(e),u&&s(n),u&&s(t),b(r,u)}}}function un(c){let e,n,t,r,a,u,J,N,E,C,k,z,I,X,Y,oe,ee,ae,L,te,Z,$e;return{c(){e=_("b"),n=f("JS"),t=f(" is actually "),r=_("b"),a=f("loosely"),u=f(", "),J=_("b"),N=f("implicitly"),E=x(),C=_("br"),k=f(" and "),z=_("b"),I=f("dynamically"),X=f(" typed."),Y=_("br"),oe=f(`
                It has both `),ee=_("b"),ae=f("primitive values"),L=f(" and "),te=_("b"),Z=f("objects"),$e=f(".")},l(w){e=y(w,"B",{});var P=j(e);n=$(P,"JS"),P.forEach(s),t=$(w," is actually "),r=y(w,"B",{});var ue=j(r);a=$(ue,"loosely"),ue.forEach(s),u=$(w,", "),J=y(w,"B",{});var O=j(J);N=$(O,"implicitly"),O.forEach(s),E=T(w),C=y(w,"BR",{}),k=$(w," and "),z=y(w,"B",{});var re=j(z);I=$(re,"dynamically"),re.forEach(s),X=$(w," typed."),Y=y(w,"BR",{}),oe=$(w,`
                It has both `),ee=y(w,"B",{});var ce=j(ee);ae=$(ce,"primitive values"),ce.forEach(s),L=$(w," and "),te=y(w,"B",{});var M=j(te);Z=$(M,"objects"),M.forEach(s),$e=$(w,".")},m(w,P){m(w,e,P),o(e,n),m(w,t,P),m(w,r,P),o(r,a),m(w,u,P),m(w,J,P),o(J,N),m(w,E,P),m(w,C,P),m(w,k,P),m(w,z,P),o(z,I),m(w,X,P),m(w,Y,P),m(w,oe,P),m(w,ee,P),o(ee,ae),m(w,L,P),m(w,te,P),o(te,Z),m(w,$e,P)},p:at,d(w){w&&s(e),w&&s(t),w&&s(r),w&&s(u),w&&s(J),w&&s(E),w&&s(C),w&&s(k),w&&s(z),w&&s(X),w&&s(Y),w&&s(oe),w&&s(ee),w&&s(L),w&&s(te),w&&s($e)}}}function cn(c){let e,n;return e=new Wt({props:{code:c[0].javascript[11].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[11].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function mn(c){let e,n,t;return n=new ze({props:{code:c[0].javascript[12].code}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].javascript[12].code),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function pn(c){let e,n;return e=new Wt({props:{code:c[0].javascript[9].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[9].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function dn(c){let e,n,t;return n=new ze({props:{code:c[0].javascript[10].code}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].javascript[10].code),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function gn(c){let e,n;return e=new Wt({props:{code:c[0].javascript[3].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[3].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function hn(c){let e,n,t;return n=new ze({props:{code:c[0].javascript[4].code}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].javascript[4].code),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function vn(c){let e,n;return e=new Wt({props:{code:c[0].javascript[6].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[6].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function bn(c){let e,n,t;return n=new ze({props:{code:c[0].javascript[7].code}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].javascript[7].code),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function _n(c){let e,n;return e=new ze({props:{code:c[0].javascript[5].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[5].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function yn(c){let e,n,t;return n=new ze({props:{code:"\u{1F914}"}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p:at,i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function wn(c){let e,n;return e=new ze({props:{code:c[0].javascript[8].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[8].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function jn(c){let e,n;return e=new ze({props:{code:c[0].javascript[0].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].javascript[0].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function kn(c){let e,n,t,r,a,u,J,N,E,C;return n=new V({props:{href:"https://learning.oreilly.com/library/view/java-generics-and/0596527756/",text:"Java Generics"}}),u=new V({props:{href:"https://homepages.inf.ed.ac.uk/wadler/gj/",text:"GJ"}}),{c(){e=f(`Generics even got an excellent book devoted to them back then  -
                `),p(n.$$.fragment),t=x(),r=_("br"),a=f(` with
                Phillip Wadler as a co-author, also a co-creator of `),p(u.$$.fragment),J=f(`
                that became `),N=_("br"),E=f(" the basis for generics as we know it.")},l(k){e=$(k,`Generics even got an excellent book devoted to them back then  -
                `),d(n.$$.fragment,k),t=T(k),r=y(k,"BR",{}),a=$(k,` with
                Phillip Wadler as a co-author, also a co-creator of `),d(u.$$.fragment,k),J=$(k,`
                that became `),N=y(k,"BR",{}),E=$(k," the basis for generics as we know it.")},m(k,z){m(k,e,z),g(n,k,z),m(k,t,z),m(k,r,z),m(k,a,z),g(u,k,z),m(k,J,z),m(k,N,z),m(k,E,z),C=!0},p:at,i(k){C||(h(n.$$.fragment,k),h(u.$$.fragment,k),C=!0)},o(k){v(n.$$.fragment,k),v(u.$$.fragment,k),C=!1},d(k){k&&s(e),b(n,k),k&&s(t),k&&s(r),k&&s(a),b(u,k),k&&s(J),k&&s(N),k&&s(E)}}}function En(c){let e,n,t,r,a,u,J,N;return r=new V({props:{href:"https://openjdk.org/jeps/286",text:"JEP 286"}}),{c(){e=f('High-five if you ever tried to use "var" in Java when '),n=_("br"),t=f(` switching
                    to it from some JavaScript code, before `),p(r.$$.fragment),a=x(),u=_("br"),J=f(" BTW you probably shouldn't use it anymore in JS.")},l(E){e=$(E,'High-five if you ever tried to use "var" in Java when '),n=y(E,"BR",{}),t=$(E,` switching
                    to it from some JavaScript code, before `),d(r.$$.fragment,E),a=T(E),u=y(E,"BR",{}),J=$(E," BTW you probably shouldn't use it anymore in JS.")},m(E,C){m(E,e,C),m(E,n,C),m(E,t,C),g(r,E,C),m(E,a,C),m(E,u,C),m(E,J,C),N=!0},p:at,i(E){N||(h(r.$$.fragment,E),N=!0)},o(E){v(r.$$.fragment,E),N=!1},d(E){E&&s(e),E&&s(n),E&&s(t),b(r,E),E&&s(a),E&&s(u),E&&s(J)}}}function Jn(c){let e,n;return e=new Hr({props:{code:"java "+c[0].java[5].fileName}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code="java "+t[0].java[5].fileName),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function Bn(c){let e,n,t,r,a;return n=new Dt({props:{code:c[0].java[5].code,header:c[0].java[5].fileName,icon:"fa-regular fa-file-lines"}}),r=new Dt({props:{code:c[0].java[6].code,header:"\xA0"}}),{c(){e=_("div"),p(n.$$.fragment),t=x(),p(r.$$.fragment),this.h()},l(u){e=y(u,"DIV",{slot:!0});var J=j(e);d(n.$$.fragment,J),t=T(J),d(r.$$.fragment,J),J.forEach(s),this.h()},h(){U(e,"slot","output")},m(u,J){m(u,e,J),g(n,e,null),o(e,t),g(r,e,null),a=!0},p(u,J){const N={};J&1&&(N.code=u[0].java[5].code),J&1&&(N.header=u[0].java[5].fileName),n.$set(N);const E={};J&1&&(E.code=u[0].java[6].code),r.$set(E)},i(u){a||(h(n.$$.fragment,u),h(r.$$.fragment,u),a=!0)},o(u){v(n.$$.fragment,u),v(r.$$.fragment,u),a=!1},d(u){u&&s(e),b(n),b(r)}}}function Sn(c){let e,n;return e=new Hr({props:{code:"java "+c[0].java[4].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code="java "+t[0].java[4].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function In(c){let e,n,t;return n=new Dt({props:{code:c[0].java[3].code}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].java[3].code),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function xn(c){let e,n;return e=new Hr({props:{code:c[0].java[2].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].java[2].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function Tn(c){let e,n,t;return n=new Dt({props:{code:c[0].java[0].code,header:c[0].java[0].fileName,icon:"fa-regular fa-file-lines"}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].java[0].code),a&1&&(u.header=r[0].java[0].fileName),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function Cn(c){let e,n,t,r,a,u,J,N,E,C,k,z,I,X,Y,oe,ee,ae,L,te,Z,$e,w,P,ue,O,re,ce,M,Ae,se,be,le,_e,de,me,ye,Q,we,W;return me=new V({props:{href:"https://openjdk.org/jeps/401",text:"Primitive Classes"}}),Q=new V({props:{href:"https://openjdk.org/jeps/402",text:"Classes for the Basic Primitives"}}),{c(){e=_("b"),n=f("Java"),t=f(" is actually "),r=_("b"),a=f("strongly"),u=f(", "),J=_("b"),N=f("explicitly"),E=f(" (but "),C=_("b"),k=f("type-inferred"),z=f(" where possible) and "),I=_("b"),X=f("statically"),Y=f(` typed.
                    `),oe=_("br"),ee=x(),ae=_("b"),L=f("Nominal"),te=f(" by nature, it doesn't support "),Z=_("b"),$e=f("structural"),w=f(` types, but allows non-denotable types.
                    `),P=_("br"),ue=f(`
                    It supports `),O=_("b"),re=f("parametrized types"),ce=f(" ("),M=_("b"),Ae=f("generics"),se=f('), but the info is "erased" at runtime.'),be=_("br"),le=f(`
                    It has both primitive values and objects. `),_e=_("br"),de=x(),p(me.$$.fragment),ye=f(`
                    and `),p(Q.$$.fragment),we=f(` are
                    on the horizon at the time of writing.`)},l(i){e=y(i,"B",{});var S=j(e);n=$(S,"Java"),S.forEach(s),t=$(i," is actually "),r=y(i,"B",{});var ot=j(r);a=$(ot,"strongly"),ot.forEach(s),u=$(i,", "),J=y(i,"B",{});var ge=j(J);N=$(ge,"explicitly"),ge.forEach(s),E=$(i," (but "),C=y(i,"B",{});var st=j(C);k=$(st,"type-inferred"),st.forEach(s),z=$(i," where possible) and "),I=y(i,"B",{});var he=j(I);X=$(he,"statically"),he.forEach(s),Y=$(i,` typed.
                    `),oe=y(i,"BR",{}),ee=T(i),ae=y(i,"B",{});var lt=j(ae);L=$(lt,"Nominal"),lt.forEach(s),te=$(i," by nature, it doesn't support "),Z=y(i,"B",{});var ve=j(Z);$e=$(ve,"structural"),ve.forEach(s),w=$(i,` types, but allows non-denotable types.
                    `),P=y(i,"BR",{}),ue=$(i,`
                    It supports `),O=y(i,"B",{});var it=j(O);re=$(it,"parametrized types"),it.forEach(s),ce=$(i," ("),M=y(i,"B",{});var ft=j(M);Ae=$(ft,"generics"),ft.forEach(s),se=$(i,'), but the info is "erased" at runtime.'),be=y(i,"BR",{}),le=$(i,`
                    It has both primitive values and objects. `),_e=y(i,"BR",{}),de=T(i),d(me.$$.fragment,i),ye=$(i,`
                    and `),d(Q.$$.fragment,i),we=$(i,` are
                    on the horizon at the time of writing.`)},m(i,S){m(i,e,S),o(e,n),m(i,t,S),m(i,r,S),o(r,a),m(i,u,S),m(i,J,S),o(J,N),m(i,E,S),m(i,C,S),o(C,k),m(i,z,S),m(i,I,S),o(I,X),m(i,Y,S),m(i,oe,S),m(i,ee,S),m(i,ae,S),o(ae,L),m(i,te,S),m(i,Z,S),o(Z,$e),m(i,w,S),m(i,P,S),m(i,ue,S),m(i,O,S),o(O,re),m(i,ce,S),m(i,M,S),o(M,Ae),m(i,se,S),m(i,be,S),m(i,le,S),m(i,_e,S),m(i,de,S),g(me,i,S),m(i,ye,S),g(Q,i,S),m(i,we,S),W=!0},p:at,i(i){W||(h(me.$$.fragment,i),h(Q.$$.fragment,i),W=!0)},o(i){v(me.$$.fragment,i),v(Q.$$.fragment,i),W=!1},d(i){i&&s(e),i&&s(t),i&&s(r),i&&s(u),i&&s(J),i&&s(E),i&&s(C),i&&s(z),i&&s(I),i&&s(Y),i&&s(oe),i&&s(ee),i&&s(ae),i&&s(te),i&&s(Z),i&&s(w),i&&s(P),i&&s(ue),i&&s(O),i&&s(ce),i&&s(M),i&&s(se),i&&s(be),i&&s(le),i&&s(_e),i&&s(de),b(me,i),i&&s(ye),b(Q,i),i&&s(we)}}}function Pn(c){let e,n;return e=new Nt({props:{code:c[0].julia[0].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].julia[0].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function Rn(c){let e,n,t;return n=new rn({props:{code:c[0].julia[1].code}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].julia[1].code),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function Dn(c){let e,n;return e=new Nt({props:{code:c[0].julia[2].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].julia[2].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function Nn(c){let e,n,t;return n=new rn({props:{code:c[0].julia[3].code}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].julia[3].code),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function Wn(c){let e,n;return e=new Nt({props:{code:c[0].julia[4].code}}),{c(){p(e.$$.fragment)},l(t){d(e.$$.fragment,t)},m(t,r){g(e,t,r),n=!0},p(t,r){const a={};r&1&&(a.code=t[0].julia[4].code),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}function zn(c){let e,n,t;return n=new Nt({props:{code:c[0].julia[5].code}}),{c(){e=_("div"),p(n.$$.fragment),this.h()},l(r){e=y(r,"DIV",{slot:!0});var a=j(e);d(n.$$.fragment,a),a.forEach(s),this.h()},h(){U(e,"slot","output")},m(r,a){m(r,e,a),g(n,e,null),t=!0},p(r,a){const u={};a&1&&(u.code=r[0].julia[5].code),n.$set(u)},i(r){t||(h(n.$$.fragment,r),t=!0)},o(r){v(n.$$.fragment,r),t=!1},d(r){r&&s(e),b(n)}}}function An(c){let e,n,t,r;return n=new V({props:{href:"https://docs.julialang.org/en/v1/manual/types/",text:"types manual"}}),{c(){e=f("Julia's "),p(n.$$.fragment),t=f(`
                is a great place to learn about its type system.`)},l(a){e=$(a,"Julia's "),d(n.$$.fragment,a),t=$(a,`
                is a great place to learn about its type system.`)},m(a,u){m(a,e,u),g(n,a,u),m(a,t,u),r=!0},p:at,i(a){r||(h(n.$$.fragment,a),r=!0)},o(a){v(n.$$.fragment,a),r=!1},d(a){a&&s(e),b(n,a),a&&s(t)}}}function Vn(c){let e,n,t,r,a,u,J,N,E,C,k,z,I,X,Y,oe,ee,ae,L,te,Z,$e,w,P,ue,O,re,ce,M,Ae,se,be,le,_e,de,me,ye,Q,we,W,i,S,ot,ge,st,he,lt,ve,it,ft,zt,Ve,At,Ge,Vt,ct,Gt,Ot,qt,je,Ht,ke,Ut,Oe,Ft,Zt,Ee,Mt,F,mt,Lt,Kt,qe,Qt,He,Xt,Ue,Yt,Fe,er,Je,tr,R,rr,pt,nr,ar,dt,or,sr,gt,lr,ir,Be,fr,ht,$r,ur,vt,cr,mr,Se,pr,A,dr,Ze,gr,hr,vr,bt,br,_r,_t,yr,wr,yt,jr,kr,Er,Jr,Me,Br,Le,Sr,Ke,Ir,Qe,xr,Tr,Ie,Cr,xe,Pr,Xe,Rr,Ye,Dr,Nr,Te,Wr,ie,wt,zr,Ar,Ce,Pe,Vr,Re,Gr,De,Or,Ne,qr,et,Ct;return k=new ut({props:{style:"margin: -1.25em 0 0 auto;",$$slots:{default:[$n]},$$scope:{ctx:c}}}),L=new ut({props:{style:"float: right; margin-top: -1.25em;",$$slots:{default:[un]},$$scope:{ctx:c}}}),w=new V({props:{href:"https://youtu.be/et8xNAc2ic8",text:"WTFJS"}}),re=new fe({props:{$$slots:{output:[mn],default:[cn]},$$scope:{ctx:c}}}),M=new fe({props:{$$slots:{output:[dn],default:[pn]},$$scope:{ctx:c}}}),se=new fe({props:{$$slots:{output:[hn],default:[gn]},$$scope:{ctx:c}}}),le=new fe({props:{$$slots:{output:[bn],default:[vn]},$$scope:{ctx:c}}}),Q=new fe({props:{style:"margin: 0.25em auto 0;",$$slots:{output:[yn],default:[_n]},$$scope:{ctx:c}}}),S=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#bigint_type",text:"BigInt"}}),ge=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#symbol_type",text:"Symbol"}}),he=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays",text:"Typed arrays"}}),ve=new V({props:{href:"https://en.wikipedia.org/wiki/The_Twilight_Zone",text:"The Twilight Zone"}}),Ve=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",text:"Promise"}}),Ge=new V({props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",text:"Generator"}}),je=new fe({props:{style:"margin: -1em 0 0 auto;",$$slots:{default:[wn]},$$scope:{ctx:c}}}),Oe=new V({props:{href:"https://en.wikipedia.org/wiki/Duck_typing",text:"If it walks like a duck and it quacks like a duck, then it must be a duck"}}),Ee=new fe({props:{style:"margin: -1em 0 0 auto;",$$slots:{default:[jn]},$$scope:{ctx:c}}}),qe=new V({props:{href:"https://en.wikipedia.org/wiki/Generics_in_Java",text:"Generics"}}),He=new V({props:{href:"https://en.wikipedia.org/wiki/Generics_in_Java#Problems_with_type_erasure",text:"Type erasure"}}),Ue=new V({props:{href:"https://dl.acm.org/doi/10.1145/2983990.2984004",text:"Java is Unsound"}}),Fe=new V({props:{href:"https://openjdk.org/jeps/8261529",text:"Universal Generics"}}),Je=new ut({props:{style:"margin: -1.5em 0 0 auto",$$slots:{default:[kn]},$$scope:{ctx:c}}}),Be=new ut({props:{style:"float:right",$$slots:{default:[En]},$$scope:{ctx:c}}}),Se=new fe({props:{style:"margin: 0 auto;",$$slots:{output:[Bn],default:[Jn]},$$scope:{ctx:c}}}),Ze=new V({props:{href:"https://openjdk.org/jeps/126",text:"Lambdas"}}),Me=new V({props:{href:"https://openjdk.org/jeps/394",text:"Pattern Matching for instanceof"}}),Le=new V({props:{href:"https://openjdk.org/jeps/395",text:"Records"}}),Ke=new V({props:{href:"https://openjdk.org/jeps/409",text:"Sealed Classes"}}),Qe=new V({props:{href:"https://openjdk.org/jeps/427",text:"Pattern Matching for switch"}}),Ie=new fe({props:{style:"margin: 0.25em auto 0;",$$slots:{output:[In],default:[Sn]},$$scope:{ctx:c}}}),xe=new fe({props:{style:"margin: 0.25em auto 0;",$$slots:{output:[Tn],default:[xn]},$$scope:{ctx:c}}}),Ye=new V({props:{href:"https://www.infoq.com/articles/data-oriented-programming-java/",text:"DOP"}}),Te=new ut({props:{style:"margin: -1.25em 0 0 auto;",$$slots:{default:[Cn]},$$scope:{ctx:c}}}),Pe=new fe({props:{$$slots:{output:[Rn],default:[Pn]},$$scope:{ctx:c}}}),Re=new fe({props:{$$slots:{output:[Nn],default:[Dn]},$$scope:{ctx:c}}}),De=new fe({props:{style:"margin: 0 auto",$$slots:{output:[zn],default:[Wn]},$$scope:{ctx:c}}}),Ne=new ut({props:{style:"float: right",$$slots:{default:[An]},$$scope:{ctx:c}}}),et=new an({}),{c(){e=_("main"),n=_("article"),t=_("header"),r=_("h4"),a=f("typed"),u=x(),J=_("section"),N=_("p"),E=f(`Types are important. They keep you away from inconsistent mess,
                guard from certain errors, allow to model and document things,
                and write performant code. The better type system of your language is, the better
                your code should be.`),C=x(),p(k.$$.fragment),z=x(),I=_("section"),X=_("p"),Y=_("b"),oe=f("JavaScript"),ee=f(` type system... JS type system... well it's formally there \u{1F610}.
                But informally it feels like you're at a playground and nobody's watching, so you
                can easily find yourself swinging on a merry-go-round and spinning on a swing
                (I honestly don't mind that kind of fun \u{1F913}).`),ae=x(),p(L.$$.fragment),te=x(),Z=_("p"),$e=f(`There are lots of crazy cool examples related to JS built in data-types and
                its type coercion. If somehow you've missed a hilarious
                `),p(w.$$.fragment),P=f(` - enjoy.
                Here are some of my favourites:`),ue=x(),O=_("div"),p(re.$$.fragment),ce=x(),p(M.$$.fragment),Ae=x(),p(se.$$.fragment),be=x(),p(le.$$.fragment),_e=x(),de=_("p"),me=f("And can a poor monkey dodge a snake and have enough mangoes and maybe a pie in a cruel JS world?"),ye=x(),p(Q.$$.fragment),we=x(),W=_("p"),i=f(`There have been quite a few data-types added to the language over time, like
                `),p(S.$$.fragment),ot=f(` and
                `),p(ge.$$.fragment),st=f(` for example. To me, addition of
                `),p(he.$$.fragment),lt=f(` was like entering
                `),p(ve.$$.fragment),it=f(` -
                science fiction, suspense, horror and super cool at once \u{1F610}.
                `),ft=_("br"),zt=x(),p(Ve.$$.fragment),At=f(` and
                `),p(Ge.$$.fragment),Vt=f(` (JS functions are good parts for sure) additions were warmly welcomed
                as well. How about `),ct=_("b"),Gt=f("mango-infinity"),Ot=f(" for that monkey?"),qt=x(),p(je.$$.fragment),Ht=x(),ke=_("p"),Ut=f("And I can't but agree that "),p(Oe.$$.fragment),Ft=f(`
                is a no fuss usage way to code.`),Zt=x(),p(Ee.$$.fragment),Mt=x(),F=_("section"),mt=_("b"),Lt=f("Java"),Kt=f(` has come a long way enhancing its type system over time.
            `),p(qe.$$.fragment),Qt=f(` were the first
            notable addition. Backward compatibility requirement, being at the heart of language evolution,
            obviously impacted generics design choices.
            `),p(He.$$.fragment),Xt=f(`
            just had to happen, but it was actually a good old null pointer that some 12 years later allowed
            for a (fearful) discovery:
            `),p(Ue.$$.fragment),Yt=f(` (\u{1F628}...and Scala as well \u{1F631}).
            Should you care though? Well, if you're designing a new programming language then wtf are you doing here \u{1F615}?
            Java isn't done with generics though: `),p(Fe.$$.fragment),er=f(`
            are already on the horizon at the time of writing.
            `),p(Je.$$.fragment),tr=x(),R=_("div"),rr=f("There's been quite a few additions since generics. I've patiently waited for "),pt=_("b"),nr=f("var"),ar=f(` support,
                wondering why `),dt=_("b"),or=f("Script"),sr=f(" had it, but "),gt=_("b"),lr=f("Java"),ir=f(` did not \u{1F914}.
                `),p(Be.$$.fragment),fr=f(`
                It turned out to be much more than just a syntactic convenience, adding
                (even if limited) support for `),ht=_("b"),$r=f("non-denotable"),ur=f(" types. "),vt=_("b"),cr=f("var"),mr=f(` allows to preserve
                type information, so the following is possible:
                `),p(Se.$$.fragment),pr=x(),A=_("p"),dr=f("Obviously "),p(Ze.$$.fragment),gr=f(" happened earlier (Java 8 vs. Java 10) and were a much-much-...-much"),hr=_("br"),vr=f(`
                    bigger than `),bt=_("b"),br=f("var"),_r=f(` (why did I mention it first then? \u{1F914}). And they brought in a notion of a target type
                    slash `),_t=_("b"),yr=f("functional interface"),wr=f(", and also "),yt=_("b"),jr=f("default methods"),kr=f(` in interfaces. And then there were.. and also... Well, somebody has to put
                    together a good article about Java type-system history and evolution for sure (\u{1F4DD}).`),Er=_("br"),Jr=f(`
                    Fast forward and there you have your
                    `),p(Me.$$.fragment),Br=f(`,
                    `),p(Le.$$.fragment),Sr=f(`,
                    `),p(Ke.$$.fragment),Ir=f(`
                    and already a third preview of `),p(Qe.$$.fragment),xr=f("."),Tr=x(),p(Ie.$$.fragment),Cr=x(),p(xe.$$.fragment),Pr=x(),Xe=_("p"),Rr=f(`And with current and ongoing type system changes Java is up for yet another programming paradigm -
                    `),p(Ye.$$.fragment),Dr=f(`.
                (Doh!)`),Nr=x(),p(Te.$$.fragment),Wr=x(),ie=_("section"),wt=_("b"),zr=f("Julia"),Ar=f(` type system is humble and powerful: you may not even notice it's there,
            but when explicitly needed, its expressiveness is ready to assist both you and the compiler.
            So you can for example do:
            `),Ce=_("div"),p(Pe.$$.fragment),Vr=x(),p(Re.$$.fragment),Gr=f(`
            There are many things that I find interesting, like the ability to define custom primitive
            types (doesn't mean you should) and the fact that Julia's standard primitive types are defined in the language itself.
            `),p(De.$$.fragment),Or=f(`
            It's also worth noting that in Julia only values have types, so type of a variable is actually a type
            of the value to which a variable refers.
            `),p(Ne.$$.fragment),qr=x(),p(et.$$.fragment),this.h()},l(l){e=y(l,"MAIN",{});var B=j(e);n=y(B,"ARTICLE",{class:!0});var ne=j(n);t=y(ne,"HEADER",{});var jt=j(t);r=y(jt,"H4",{});var kt=j(r);a=$(kt,"typed"),kt.forEach(s),jt.forEach(s),u=T(ne),J=y(ne,"SECTION",{id:!0});var tt=j(J);N=y(tt,"P",{});var Et=j(N);E=$(Et,`Types are important. They keep you away from inconsistent mess,
                guard from certain errors, allow to model and document things,
                and write performant code. The better type system of your language is, the better
                your code should be.`),Et.forEach(s),C=T(tt),d(k.$$.fragment,tt),tt.forEach(s),z=T(ne),I=y(ne,"SECTION",{id:!0});var G=j(I);X=y(G,"P",{});var $t=j(X);Y=y($t,"B",{});var Jt=j(Y);oe=$(Jt,"JavaScript"),Jt.forEach(s),ee=$($t,` type system... JS type system... well it's formally there \u{1F610}.
                But informally it feels like you're at a playground and nobody's watching, so you
                can easily find yourself swinging on a merry-go-round and spinning on a swing
                (I honestly don't mind that kind of fun \u{1F913}).`),$t.forEach(s),ae=T(G),d(L.$$.fragment,G),te=T(G),Z=y(G,"P",{});var rt=j(Z);$e=$(rt,`There are lots of crazy cool examples related to JS built in data-types and
                its type coercion. If somehow you've missed a hilarious
                `),d(w.$$.fragment,rt),P=$(rt,` - enjoy.
                Here are some of my favourites:`),rt.forEach(s),ue=T(G),O=y(G,"DIV",{class:!0});var pe=j(O);d(re.$$.fragment,pe),ce=T(pe),d(M.$$.fragment,pe),Ae=T(pe),d(se.$$.fragment,pe),be=T(pe),d(le.$$.fragment,pe),pe.forEach(s),_e=T(G),de=y(G,"P",{});var Bt=j(de);me=$(Bt,"And can a poor monkey dodge a snake and have enough mangoes and maybe a pie in a cruel JS world?"),Bt.forEach(s),ye=T(G),d(Q.$$.fragment,G),we=T(G),W=y(G,"P",{});var H=j(W);i=$(H,`There have been quite a few data-types added to the language over time, like
                `),d(S.$$.fragment,H),ot=$(H,` and
                `),d(ge.$$.fragment,H),st=$(H,` for example. To me, addition of
                `),d(he.$$.fragment,H),lt=$(H,` was like entering
                `),d(ve.$$.fragment,H),it=$(H,` -
                science fiction, suspense, horror and super cool at once \u{1F610}.
                `),ft=y(H,"BR",{}),zt=T(H),d(Ve.$$.fragment,H),At=$(H,` and
                `),d(Ge.$$.fragment,H),Vt=$(H,` (JS functions are good parts for sure) additions were warmly welcomed
                as well. How about `),ct=y(H,"B",{});var St=j(ct);Gt=$(St,"mango-infinity"),St.forEach(s),Ot=$(H," for that monkey?"),H.forEach(s),qt=T(G),d(je.$$.fragment,G),Ht=T(G),ke=y(G,"P",{style:!0});var nt=j(ke);Ut=$(nt,"And I can't but agree that "),d(Oe.$$.fragment,nt),Ft=$(nt,`
                is a no fuss usage way to code.`),nt.forEach(s),Zt=T(G),d(Ee.$$.fragment,G),G.forEach(s),Mt=T(ne),F=y(ne,"SECTION",{id:!0,class:!0});var K=j(F);mt=y(K,"B",{});var It=j(mt);Lt=$(It,"Java"),It.forEach(s),Kt=$(K,` has come a long way enhancing its type system over time.
            `),d(qe.$$.fragment,K),Qt=$(K,` were the first
            notable addition. Backward compatibility requirement, being at the heart of language evolution,
            obviously impacted generics design choices.
            `),d(He.$$.fragment,K),Xt=$(K,`
            just had to happen, but it was actually a good old null pointer that some 12 years later allowed
            for a (fearful) discovery:
            `),d(Ue.$$.fragment,K),Yt=$(K,` (\u{1F628}...and Scala as well \u{1F631}).
            Should you care though? Well, if you're designing a new programming language then wtf are you doing here \u{1F615}?
            Java isn't done with generics though: `),d(Fe.$$.fragment,K),er=$(K,`
            are already on the horizon at the time of writing.
            `),d(Je.$$.fragment,K),tr=T(K),R=y(K,"DIV",{});var D=j(R);rr=$(D,"There's been quite a few additions since generics. I've patiently waited for "),pt=y(D,"B",{});var xt=j(pt);nr=$(xt,"var"),xt.forEach(s),ar=$(D,` support,
                wondering why `),dt=y(D,"B",{});var Tt=j(dt);or=$(Tt,"Script"),Tt.forEach(s),sr=$(D," had it, but "),gt=y(D,"B",{});var Ur=j(gt);lr=$(Ur,"Java"),Ur.forEach(s),ir=$(D,` did not \u{1F914}.
                `),d(Be.$$.fragment,D),fr=$(D,`
                It turned out to be much more than just a syntactic convenience, adding
                (even if limited) support for `),ht=y(D,"B",{});var Fr=j(ht);$r=$(Fr,"non-denotable"),Fr.forEach(s),ur=$(D," types. "),vt=y(D,"B",{});var Zr=j(vt);cr=$(Zr,"var"),Zr.forEach(s),mr=$(D,` allows to preserve
                type information, so the following is possible:
                `),d(Se.$$.fragment,D),pr=T(D),A=y(D,"P",{});var q=j(A);dr=$(q,"Obviously "),d(Ze.$$.fragment,q),gr=$(q," happened earlier (Java 8 vs. Java 10) and were a much-much-...-much"),hr=y(q,"BR",{}),vr=$(q,`
                    bigger than `),bt=y(q,"B",{});var Mr=j(bt);br=$(Mr,"var"),Mr.forEach(s),_r=$(q,` (why did I mention it first then? \u{1F914}). And they brought in a notion of a target type
                    slash `),_t=y(q,"B",{});var Lr=j(_t);yr=$(Lr,"functional interface"),Lr.forEach(s),wr=$(q,", and also "),yt=y(q,"B",{});var Kr=j(yt);jr=$(Kr,"default methods"),Kr.forEach(s),kr=$(q,` in interfaces. And then there were.. and also... Well, somebody has to put
                    together a good article about Java type-system history and evolution for sure (\u{1F4DD}).`),Er=y(q,"BR",{}),Jr=$(q,`
                    Fast forward and there you have your
                    `),d(Me.$$.fragment,q),Br=$(q,`,
                    `),d(Le.$$.fragment,q),Sr=$(q,`,
                    `),d(Ke.$$.fragment,q),Ir=$(q,`
                    and already a third preview of `),d(Qe.$$.fragment,q),xr=$(q,"."),q.forEach(s),Tr=T(D),d(Ie.$$.fragment,D),Cr=T(D),d(xe.$$.fragment,D),Pr=T(D),Xe=y(D,"P",{});var Pt=j(Xe);Rr=$(Pt,`And with current and ongoing type system changes Java is up for yet another programming paradigm -
                    `),d(Ye.$$.fragment,Pt),Dr=$(Pt,`.
                (Doh!)`),Pt.forEach(s),Nr=T(D),d(Te.$$.fragment,D),D.forEach(s),K.forEach(s),Wr=T(ne),ie=y(ne,"SECTION",{id:!0,class:!0});var We=j(ie);wt=y(We,"B",{});var Qr=j(wt);zr=$(Qr,"Julia"),Qr.forEach(s),Ar=$(We,` type system is humble and powerful: you may not even notice it's there,
            but when explicitly needed, its expressiveness is ready to assist both you and the compiler.
            So you can for example do:
            `),Ce=y(We,"DIV",{class:!0});var Rt=j(Ce);d(Pe.$$.fragment,Rt),Vr=T(Rt),d(Re.$$.fragment,Rt),Rt.forEach(s),Gr=$(We,`
            There are many things that I find interesting, like the ability to define custom primitive
            types (doesn't mean you should) and the fact that Julia's standard primitive types are defined in the language itself.
            `),d(De.$$.fragment,We),Or=$(We,`
            It's also worth noting that in Julia only values have types, so type of a variable is actually a type
            of the value to which a variable refers.
            `),d(Ne.$$.fragment,We),We.forEach(s),qr=T(ne),d(et.$$.fragment,ne),ne.forEach(s),B.forEach(s),this.h()},h(){U(J,"id","intro"),U(O,"class","wtfjs svelte-cf18uv"),nn(ke,"clear","both"),U(I,"id","JavaScript"),U(F,"id","java"),U(F,"class","svelte-cf18uv"),U(Ce,"class","julia-entry-type svelte-cf18uv"),U(ie,"id","julia"),U(ie,"class","svelte-cf18uv"),U(n,"class","typed")},m(l,B){m(l,e,B),o(e,n),o(n,t),o(t,r),o(r,a),o(n,u),o(n,J),o(J,N),o(N,E),o(J,C),g(k,J,null),o(n,z),o(n,I),o(I,X),o(X,Y),o(Y,oe),o(X,ee),o(I,ae),g(L,I,null),o(I,te),o(I,Z),o(Z,$e),g(w,Z,null),o(Z,P),o(I,ue),o(I,O),g(re,O,null),o(O,ce),g(M,O,null),o(O,Ae),g(se,O,null),o(O,be),g(le,O,null),o(I,_e),o(I,de),o(de,me),o(I,ye),g(Q,I,null),o(I,we),o(I,W),o(W,i),g(S,W,null),o(W,ot),g(ge,W,null),o(W,st),g(he,W,null),o(W,lt),g(ve,W,null),o(W,it),o(W,ft),o(W,zt),g(Ve,W,null),o(W,At),g(Ge,W,null),o(W,Vt),o(W,ct),o(ct,Gt),o(W,Ot),o(I,qt),g(je,I,null),o(I,Ht),o(I,ke),o(ke,Ut),g(Oe,ke,null),o(ke,Ft),o(I,Zt),g(Ee,I,null),o(n,Mt),o(n,F),o(F,mt),o(mt,Lt),o(F,Kt),g(qe,F,null),o(F,Qt),g(He,F,null),o(F,Xt),g(Ue,F,null),o(F,Yt),g(Fe,F,null),o(F,er),g(Je,F,null),o(F,tr),o(F,R),o(R,rr),o(R,pt),o(pt,nr),o(R,ar),o(R,dt),o(dt,or),o(R,sr),o(R,gt),o(gt,lr),o(R,ir),g(Be,R,null),o(R,fr),o(R,ht),o(ht,$r),o(R,ur),o(R,vt),o(vt,cr),o(R,mr),g(Se,R,null),o(R,pr),o(R,A),o(A,dr),g(Ze,A,null),o(A,gr),o(A,hr),o(A,vr),o(A,bt),o(bt,br),o(A,_r),o(A,_t),o(_t,yr),o(A,wr),o(A,yt),o(yt,jr),o(A,kr),o(A,Er),o(A,Jr),g(Me,A,null),o(A,Br),g(Le,A,null),o(A,Sr),g(Ke,A,null),o(A,Ir),g(Qe,A,null),o(A,xr),o(R,Tr),g(Ie,R,null),o(R,Cr),g(xe,R,null),o(R,Pr),o(R,Xe),o(Xe,Rr),g(Ye,Xe,null),o(Xe,Dr),o(R,Nr),g(Te,R,null),o(n,Wr),o(n,ie),o(ie,wt),o(wt,zr),o(ie,Ar),o(ie,Ce),g(Pe,Ce,null),o(Ce,Vr),g(Re,Ce,null),o(ie,Gr),g(De,ie,null),o(ie,Or),g(Ne,ie,null),o(n,qr),g(et,n,null),Ct=!0},p(l,[B]){const ne={};B&2&&(ne.$$scope={dirty:B,ctx:l}),k.$set(ne);const jt={};B&2&&(jt.$$scope={dirty:B,ctx:l}),L.$set(jt);const kt={};B&3&&(kt.$$scope={dirty:B,ctx:l}),re.$set(kt);const tt={};B&3&&(tt.$$scope={dirty:B,ctx:l}),M.$set(tt);const Et={};B&3&&(Et.$$scope={dirty:B,ctx:l}),se.$set(Et);const G={};B&3&&(G.$$scope={dirty:B,ctx:l}),le.$set(G);const $t={};B&3&&($t.$$scope={dirty:B,ctx:l}),Q.$set($t);const Jt={};B&3&&(Jt.$$scope={dirty:B,ctx:l}),je.$set(Jt);const rt={};B&3&&(rt.$$scope={dirty:B,ctx:l}),Ee.$set(rt);const pe={};B&2&&(pe.$$scope={dirty:B,ctx:l}),Je.$set(pe);const Bt={};B&2&&(Bt.$$scope={dirty:B,ctx:l}),Be.$set(Bt);const H={};B&3&&(H.$$scope={dirty:B,ctx:l}),Se.$set(H);const St={};B&3&&(St.$$scope={dirty:B,ctx:l}),Ie.$set(St);const nt={};B&3&&(nt.$$scope={dirty:B,ctx:l}),xe.$set(nt);const K={};B&2&&(K.$$scope={dirty:B,ctx:l}),Te.$set(K);const It={};B&3&&(It.$$scope={dirty:B,ctx:l}),Pe.$set(It);const D={};B&3&&(D.$$scope={dirty:B,ctx:l}),Re.$set(D);const xt={};B&3&&(xt.$$scope={dirty:B,ctx:l}),De.$set(xt);const Tt={};B&2&&(Tt.$$scope={dirty:B,ctx:l}),Ne.$set(Tt)},i(l){Ct||(h(k.$$.fragment,l),h(L.$$.fragment,l),h(w.$$.fragment,l),h(re.$$.fragment,l),h(M.$$.fragment,l),h(se.$$.fragment,l),h(le.$$.fragment,l),h(Q.$$.fragment,l),h(S.$$.fragment,l),h(ge.$$.fragment,l),h(he.$$.fragment,l),h(ve.$$.fragment,l),h(Ve.$$.fragment,l),h(Ge.$$.fragment,l),h(je.$$.fragment,l),h(Oe.$$.fragment,l),h(Ee.$$.fragment,l),h(qe.$$.fragment,l),h(He.$$.fragment,l),h(Ue.$$.fragment,l),h(Fe.$$.fragment,l),h(Je.$$.fragment,l),h(Be.$$.fragment,l),h(Se.$$.fragment,l),h(Ze.$$.fragment,l),h(Me.$$.fragment,l),h(Le.$$.fragment,l),h(Ke.$$.fragment,l),h(Qe.$$.fragment,l),h(Ie.$$.fragment,l),h(xe.$$.fragment,l),h(Ye.$$.fragment,l),h(Te.$$.fragment,l),h(Pe.$$.fragment,l),h(Re.$$.fragment,l),h(De.$$.fragment,l),h(Ne.$$.fragment,l),h(et.$$.fragment,l),Ct=!0)},o(l){v(k.$$.fragment,l),v(L.$$.fragment,l),v(w.$$.fragment,l),v(re.$$.fragment,l),v(M.$$.fragment,l),v(se.$$.fragment,l),v(le.$$.fragment,l),v(Q.$$.fragment,l),v(S.$$.fragment,l),v(ge.$$.fragment,l),v(he.$$.fragment,l),v(ve.$$.fragment,l),v(Ve.$$.fragment,l),v(Ge.$$.fragment,l),v(je.$$.fragment,l),v(Oe.$$.fragment,l),v(Ee.$$.fragment,l),v(qe.$$.fragment,l),v(He.$$.fragment,l),v(Ue.$$.fragment,l),v(Fe.$$.fragment,l),v(Je.$$.fragment,l),v(Be.$$.fragment,l),v(Se.$$.fragment,l),v(Ze.$$.fragment,l),v(Me.$$.fragment,l),v(Le.$$.fragment,l),v(Ke.$$.fragment,l),v(Qe.$$.fragment,l),v(Ie.$$.fragment,l),v(xe.$$.fragment,l),v(Ye.$$.fragment,l),v(Te.$$.fragment,l),v(Pe.$$.fragment,l),v(Re.$$.fragment,l),v(De.$$.fragment,l),v(Ne.$$.fragment,l),v(et.$$.fragment,l),Ct=!1},d(l){l&&s(e),b(k),b(L),b(w),b(re),b(M),b(se),b(le),b(Q),b(S),b(ge),b(he),b(ve),b(Ve),b(Ge),b(je),b(Oe),b(Ee),b(qe),b(He),b(Ue),b(Fe),b(Je),b(Be),b(Se),b(Ze),b(Me),b(Le),b(Ke),b(Qe),b(Ie),b(xe),b(Ye),b(Te),b(Pe),b(Re),b(De),b(Ne),b(et)}}}function Gn(c,e,n){let{codeBlocks:t}=e;return c.$$set=r=>{"codeBlocks"in r&&n(0,t=r.codeBlocks)},[t]}class Ln extends Yr{constructor(e){super(),en(this,e,Gn,Vn,tn,{codeBlocks:0})}}export{Ln as default};
